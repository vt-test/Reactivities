[{"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\stores\\store.ts":"3","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"4","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"5","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx":"6","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"7","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\errors\\TestError.tsx":"8","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"9","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\errors\\NotFound.tsx":"10","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"11","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"12","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"13","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"14","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx":"15","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"16","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\details\\AcivityDetailSidebar.tsx":"17","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDeatailChat.tsx":"18","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailHeader.tsx":"19","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailInfo.tsx":"20","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"21","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\errors\\ValidationErrors.tsx":"22","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts":"23","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\errors\\ServerError.tsx":"24"},{"size":885,"mtime":1643701542887,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1642773497382,"results":"27","hashOfConfig":"26"},{"size":461,"mtime":1643743422431,"results":"28","hashOfConfig":"26"},{"size":1783,"mtime":1643744087435,"results":"29","hashOfConfig":"26"},{"size":5096,"mtime":1643365065792,"results":"30","hashOfConfig":"26"},{"size":938,"mtime":1643452514222,"results":"31","hashOfConfig":"26"},{"size":823,"mtime":1643376069776,"results":"32","hashOfConfig":"26"},{"size":2170,"mtime":1643744279684,"results":"33","hashOfConfig":"26"},{"size":2824,"mtime":1643374027727,"results":"34","hashOfConfig":"26"},{"size":533,"mtime":1643454586174,"results":"35","hashOfConfig":"26"},{"size":1331,"mtime":1643373161063,"results":"36","hashOfConfig":"26"},{"size":3419,"mtime":1643362875705,"results":"37","hashOfConfig":"26"},{"size":2422,"mtime":1643744669375,"results":"38","hashOfConfig":"26"},{"size":374,"mtime":1643201565514,"results":"39","hashOfConfig":"26"},{"size":571,"mtime":1643374387414,"results":"40","hashOfConfig":"26"},{"size":767,"mtime":1643371798815,"results":"41","hashOfConfig":"26"},{"size":1901,"mtime":1643373428764,"results":"42","hashOfConfig":"26"},{"size":1881,"mtime":1643373342414,"results":"43","hashOfConfig":"26"},{"size":1650,"mtime":1643372898210,"results":"44","hashOfConfig":"26"},{"size":1415,"mtime":1643373182718,"results":"45","hashOfConfig":"26"},{"size":1768,"mtime":1643376263516,"results":"46","hashOfConfig":"26"},{"size":559,"mtime":1643742653277,"results":"47","hashOfConfig":"26"},{"size":311,"mtime":1643743354609,"results":"48","hashOfConfig":"26"},{"size":726,"mtime":1643743901409,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1t4eils",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\index.tsx",[],["104","105"],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\stores\\store.ts",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\errors\\TestError.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\errors\\NotFound.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["106","107","108","109","110"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Button, ButtonGroup, Card, Grid, Image } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport AcivityDetailSidebar from './AcivityDetailSidebar';\r\nimport ActivityDeatailChat from './ActivityDeatailChat';\r\nimport ActivityDetailHeader from './ActivityDetailHeader';\r\nimport ActivityDetailInfo from './ActivityDetailInfo';\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivitiy,\r\n    loadingInitial,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivitiy(id);\r\n  }, [id, loadActivitiy]);\r\n\r\n  if (loadingInitial || !activity)\r\n    return <LoadingComponent content='Loadnig' />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailHeader activity={activity} />\r\n        <ActivityDetailInfo activity={activity} />\r\n        <ActivityDeatailChat />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <AcivityDetailSidebar />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["111"],"import { observer } from 'mobx-react-lite';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const {\r\n    createActivity,\r\n    updateActivity,\r\n    loading,\r\n    loadActivitiy,\r\n    loadingInitial,\r\n  } = activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState({\r\n    id: '',\r\n    title: '',\r\n    cateroty: '',\r\n    description: '',\r\n    date: '',\r\n    city: '',\r\n    venue: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivitiy(id).then((activity) => setActivity(activity!));\r\n  }, [id, loadActivitiy]);\r\n\r\n  function handleSubmit() {\r\n    console.log(activity.id.length);\r\n    if (activity.id.length === 0) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      console.log('updateActivity');\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n\r\n    //activity.id ? updateActivity(activity) : createActivity(activity);\r\n  }\r\n\r\n  function handleInputChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    const { name, value } = event.target;\r\n    setActivity({ ...activity, [name]: value });\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content='Loading activity...' />;\r\n  return (\r\n    <Segment clearing>\r\n      <Form onSubmit={handleSubmit} autoComplete='off'>\r\n        <Form.Input\r\n          placeholder='Title'\r\n          value={activity.title}\r\n          name='title'\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.TextArea\r\n          placeholder='Description'\r\n          value={activity.description}\r\n          name='description'\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.Input\r\n          placeholder='Category'\r\n          value={activity.cateroty}\r\n          name='cateroty'\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.Input\r\n          type='date'\r\n          placeholder='Date'\r\n          value={activity.date}\r\n          name='date'\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.Input\r\n          placeholder='City'\r\n          value={activity.city}\r\n          name='city'\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.Input\r\n          placeholder='Venue'\r\n          value={activity.venue}\r\n          name='venue'\r\n          onChange={handleInputChange}\r\n        />\r\n        <Button\r\n          loading={loading}\r\n          disabled={loading}\r\n          floated='right'\r\n          positive\r\n          type='submit'\r\n          content='Submit'\r\n        />\r\n        <Button\r\n          as={Link}\r\n          to='/activities'\r\n          //onClick={closeForm}\r\n          floated='right'\r\n          type='button'\r\n          content='Cancel'\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n});\r\n","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\api\\agent.ts",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["112","113","114"],"import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport { Header, Item, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities, activitiesByDate } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color='teal'>\r\n            {group}\r\n          </Header>\r\n          {activities.map((item) => (\r\n            <ActivityListItem key={item.id} activity={item} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\details\\AcivityDetailSidebar.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDeatailChat.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailHeader.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailInfo.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",["115","116","117","118"],"import React, { SyntheticEvent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Item,\r\n  ItemHeader,\r\n  Label,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  // const [target, setTarget] = useState('');\r\n  // const { activityStore } = useStore();\r\n  // const { deleteActivity, loading } = activityStore;\r\n\r\n  // function handleActivityDelete(\r\n  //   e: SyntheticEvent<HTMLButtonElement>,\r\n  //   id: string\r\n  // ) {\r\n  //   setTarget(e.currentTarget.name);\r\n  //   deleteActivity(id);\r\n  // }\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image size='tiny' circular src='/assets/user.png' />\r\n            <Item.Content>\r\n              <ItemHeader ss={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </ItemHeader>\r\n              <Item.Description>Hosted by Bob</Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name='clock' /> {activity.date}\r\n          <Icon name='marker' /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>Attendees go here</Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color='teal'\r\n          floated='right'\r\n          content='View'\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n",["119","120"],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\errors\\ValidationErrors.tsx",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts",[],"C:\\PROJEKTI\\LEARN\\U1\\Reactivities\\client-app\\src\\features\\errors\\ServerError.tsx",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},{"ruleId":"125","severity":1,"message":"129","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"130","line":4,"column":18,"nodeType":"127","messageId":"128","endLine":4,"endColumn":29},{"ruleId":"125","severity":1,"message":"131","line":4,"column":31,"nodeType":"127","messageId":"128","endLine":4,"endColumn":35},{"ruleId":"125","severity":1,"message":"132","line":4,"column":43,"nodeType":"127","messageId":"128","endLine":4,"endColumn":48},{"ruleId":"125","severity":1,"message":"133","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":18},{"ruleId":"125","severity":1,"message":"134","line":3,"column":18,"nodeType":"127","messageId":"128","endLine":3,"endColumn":22},{"ruleId":"125","severity":1,"message":"135","line":3,"column":24,"nodeType":"127","messageId":"128","endLine":3,"endColumn":31},{"ruleId":"125","severity":1,"message":"136","line":9,"column":30,"nodeType":"127","messageId":"128","endLine":9,"endColumn":46},{"ruleId":"125","severity":1,"message":"137","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":31},{"ruleId":"125","severity":1,"message":"138","line":1,"column":33,"nodeType":"127","messageId":"128","endLine":1,"endColumn":41},{"ruleId":"125","severity":1,"message":"139","line":8,"column":3,"nodeType":"127","messageId":"128","endLine":8,"endColumn":8},{"ruleId":"125","severity":1,"message":"140","line":12,"column":10,"nodeType":"127","messageId":"128","endLine":12,"endColumn":18},{"ruleId":"121","replacedBy":"141"},{"ruleId":"123","replacedBy":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'Activity' is defined but never used.","'Item' is defined but never used.","'Segment' is defined but never used.","'activitiesByDate' is assigned a value but never used.","'SyntheticEvent' is defined but never used.","'useState' is defined but never used.","'Label' is defined but never used.","'useStore' is defined but never used.",["143"],["144"],"no-global-assign","no-unsafe-negation"]